<nav>
  <ul>
    <% idx = 0 %>

    <% @doc[:resources].sort_by(&:first).each do |key, api| %>
      <li class="title">
        <a>
          <%= api[:name] %>
        </a>
      </li>

      <ul class="submenu">
        <% api[:methods].each do |m| %>
          <%- m[:id] = "#{key}-#{idx += 1}" %>
          <li>
            <a href="#<%= m[:id] %>">
              <%= m[:apis].first[:short_description] %>
            </a>
          </li>
        <% end %>
      </ul>
    <% end %>
  </ul>
</nav>

<article>
  <%= raw @doc[:info] %>

  <% @doc[:resources].sort_by(&:first).each do |key, api| %>
    <% api[:methods].each do |m| %>
      <%= render(:partial => "method_detail", :locals => {:method => m, :h_level => 3}) %>
    <% end %>
  <% end %>
</article>

<script type="text/javascript">
  window.addEventListener("hashchange", function() {
    // Remove all current classes
    links = document.querySelectorAll("nav a");
    [].slice.call(links).forEach(function(link) {
      link.classList.remove("current");
    });

    // Collapse all submenues
    submenues = document.querySelectorAll(".submenu");
    [].slice.call(submenues).forEach(function(submenu) {
      submenu.classList.remove("open");
    });

    // Add current for the active menu
    id = window.location.hash;
    activeLink = document.querySelector("nav a[href='" + id + "']");
    if (activeLink) {
      activeLink.classList.add("current");

      // Expand the submenu with the active link
      submenu = activeLink.parentNode.parentNode;
      submenu.classList.add("open");
    }
  });

  var isInViewport = function (elem) {
    var bounding = elem.getBoundingClientRect();
    return (
      bounding.top >= 0 &&
      bounding.left >= 0 &&
      bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
      bounding.right <= (window.innerWidth || document.documentElement.clientWidth)
    );
  };

  window.addEventListener("scroll", function(event) {
    atBottom = (window.innerHeight + window.scrollY) >= document.body.offsetHeight;

    // Get the first, visible method headline
    vh2s = [];
    [].slice.call(document.querySelectorAll(".method h2")).forEach(function(h2) {
      if (isInViewport(h2)) vh2s.push(h2);
    });

    h2 = vh2s[0];
    if (atBottom) h2 = vh2s.reverse()[0];

    if (h2) {
      // Hide all submenues
      [].slice.call(document.querySelectorAll(".submenu")).forEach(function(submenu) {
        submenu.classList.remove("open");
      });

      // Find matching nav link
      hash = h2.querySelector("a").getAttribute("href");
      link = document.querySelector("nav a[href='" + hash + "']");

      // Find the submenu and display it
      submenu = link.parentNode.parentNode;
      submenu.classList.add("open");
    };
  });

  [].slice.call(document.querySelectorAll("nav .title")).forEach(function(t) {
    t.addEventListener("click", function(e) {
      e.preventDefault();

      // Hide all submenues
      [].slice.call(document.querySelectorAll(".submenu")).forEach(function(submenu) {
        submenu.classList.remove("open");
      });

      submenu = t.nextSibling.nextSibling;
      submenu.classList.add("open");
    })
  })
</script>
